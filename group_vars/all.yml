# ------------------------------------------------------------------------------

# Preferences:
#   These are the default values for all hosts. To apply different preferences between hosts use host preferences files (`host_vars` directory).

timezone: "America/Los_Angeles"
#   (password authentication is disabled by default for the root user. You can opt to disable password authentication for all other users as well)
ssh_disable_password_authentication: false

cli_tools_common:
    - bat                 # Cat clone with syntax highlighting and git integration (`cat` alternative)
    - eza                 # Modern replacement for ls, community fork of exa (`ls` alternative)
    - fd                  # Simple, fast and user-friendly alternative to find (`find` alternative)
    - fzf                 # Command-line fuzzy finder
    - zoxide              # A smarter cd command for your terminal (`cd` alternative)
    - vim                 # Easily usable by anyone
    - hwinfo              # Hardware detection tool from openSUSE
    - neofetch            # A CLI system information tool written in BASH that supports displaying images.
    - duf                 # Disk Usage/Free Utility (`df` alternative)
    - speedtest-cli       # Command line interface for testing internet bandwidth using speedtest.net
    - wget                # Network utility to retrieve files from the Web (used by Neovim to download files on the internet when pressing `gf`)
    - curl                # Network utility to retrieve files from the Web
    - nmap                # Utility for network discovery and security auditing (great to check open ports)
    - chezmoi             # dotfile management tool

cli_tools_nix:
    # For Ansible:
    - sshpass             # Fool ssh into accepting an interactive password non-interactively (required by Ansible to run playbooks on remote managed nodes, in case you ever use this computer to run the `arch-base` playbook on another computer)
    
    # For user usage:
    - rsync               # A fast and versatile file copying tool for remote and local files (`cp` alternative)
    - trash-cli           # Command line trashcan (recycle bin) interface (`rm` alternative)
    - tldr                # Command line client for tldr, a collection of simplified and community-driven man pages
    - btop                # A graphical process/system monitor (`htop` alternative)
    - ncdu                # Disk usage analyzer like WinDirStat (`du` alternative)
    - dosfstools          # DOS filesystem utilities TODO:Remove?
    # - exfat-utils        # Utilities for exFAT file system TODO:Remove?
    - mtools              # A collection of utilities to access MS-DOS disks TODO: Remove?
    # Compression/Uncompression utilities (used by zsh custom function `extract`):
    - p7zip               # Command-line file archiver with high compression ratio
    - unrar               # The RAR uncompression program
    - unzip               # For extracting and viewing files in .zip archives
    - zip                 # Compressor/archiver for creating and modifying zipfiles
    - bandwhich           # Terminal bandwidth utilization tool
    - ethtool             # Utility for controlling network drivers and hardware
    - traceroute          # Tracks the route taken by packets over an IP network
    - evince              # Document viewer (PDF, PostScript, XPS, djvu, dvi, tiff, cbr, cbz, cb7, cbt)
    - fontconfig          # library for configuring and customizing font access

cli_tools_windows:
    - 7zip                # Unzips everything
    - qbittorrent         # An advanced BitTorrent client programmed in C++, based on Qt toolkit and libtorrent-rasterbar

cli_tools_arch:
    - pipewire-alsa       # Low-latency audio/video router and processor - ALSA configuration
    - pipewire-jack       # Low-latency audio/video router and processor - JACK replacement
    - pipewire-pulse      # Low-latency audio/video router and processor - PulseAudio replacement
    - pavucontrol         # PulseAudio Volume Control
    - audacious           # Audio player
    - vi                  # Called by ansible-vault and maybe others
    - cronie               # Cron

cli_tools_linux:

cli_tools_macos_casks:
    - unarchiver          # unar and lsar: Objective-C tools for uncompressing archive files 
    - libreoffice         # LibreOffice (fresh) branch which contains new features and program enhancements

gui_tools_nix:
    - mpv           # A free, open source, and cross-platform media player
    - mpv-mpris     # MPRIS plugin for mpv (media keys)

gui_tools_linux:
    - libreoffice-fresh   # LibreOffice branch which contains new features and program enhancements
    - foliate             # A simple and modern GTK eBook reader

wsl2_distribution: wsl-ubuntu-2204

update_categories:
  # You can install only specific updates by uncommenting it
  # * - installs all updates
  # - "*"
  - Critical Updates
  # - Definition Updates
  # - Developer Kits
  # - Feature Packs
  - Security Updates
  # - Service Packs
  # - Tools
  - Update Rollups
  # - Updates
  # - Upgrades

# Calculated variables (no need to touch):
#   (lookup env will get the given environment variable from the controller machine. This is why we must execute this script via `ansible-pull` and while logged in as the user for which we want to generate the config files. For more info see: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/env_lookup.html#ansible-collections-ansible-builtin-env-lookup)
home: "{{ lookup('env', 'HOME') }}"
user: "{{ lookup('env', 'USER') }}"
#   (required for link creation)
repo_dir: "{{ ansible_facts.env.PWD }}"
#   (required for processor firmware updates)
is_intel: "{{ 'GenuineIntel' in ansible_processor }}"